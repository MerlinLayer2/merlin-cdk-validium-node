// Code generated by mockery. DO NOT EDIT.

package mock_elderberry

import mock "github.com/stretchr/testify/mock"

// syncProcessUpdateEtrogSequenceInterface is an autogenerated mock type for the syncProcessUpdateEtrogSequenceInterface type
type syncProcessUpdateEtrogSequenceInterface struct {
	mock.Mock
}

type syncProcessUpdateEtrogSequenceInterface_Expecter struct {
	mock *mock.Mock
}

func (_m *syncProcessUpdateEtrogSequenceInterface) EXPECT() *syncProcessUpdateEtrogSequenceInterface_Expecter {
	return &syncProcessUpdateEtrogSequenceInterface_Expecter{mock: &_m.Mock}
}

// PendingFlushID provides a mock function with given fields: flushID, proverID
func (_m *syncProcessUpdateEtrogSequenceInterface) PendingFlushID(flushID uint64, proverID string) {
	_m.Called(flushID, proverID)
}

// syncProcessUpdateEtrogSequenceInterface_PendingFlushID_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'PendingFlushID'
type syncProcessUpdateEtrogSequenceInterface_PendingFlushID_Call struct {
	*mock.Call
}

// PendingFlushID is a helper method to define mock.On call
//   - flushID uint64
//   - proverID string
func (_e *syncProcessUpdateEtrogSequenceInterface_Expecter) PendingFlushID(flushID interface{}, proverID interface{}) *syncProcessUpdateEtrogSequenceInterface_PendingFlushID_Call {
	return &syncProcessUpdateEtrogSequenceInterface_PendingFlushID_Call{Call: _e.mock.On("PendingFlushID", flushID, proverID)}
}

func (_c *syncProcessUpdateEtrogSequenceInterface_PendingFlushID_Call) Run(run func(flushID uint64, proverID string)) *syncProcessUpdateEtrogSequenceInterface_PendingFlushID_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(uint64), args[1].(string))
	})
	return _c
}

func (_c *syncProcessUpdateEtrogSequenceInterface_PendingFlushID_Call) Return() *syncProcessUpdateEtrogSequenceInterface_PendingFlushID_Call {
	_c.Call.Return()
	return _c
}

func (_c *syncProcessUpdateEtrogSequenceInterface_PendingFlushID_Call) RunAndReturn(run func(uint64, string)) *syncProcessUpdateEtrogSequenceInterface_PendingFlushID_Call {
	_c.Call.Return(run)
	return _c
}

// newSyncProcessUpdateEtrogSequenceInterface creates a new instance of syncProcessUpdateEtrogSequenceInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func newSyncProcessUpdateEtrogSequenceInterface(t interface {
	mock.TestingT
	Cleanup(func())
}) *syncProcessUpdateEtrogSequenceInterface {
	mock := &syncProcessUpdateEtrogSequenceInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
